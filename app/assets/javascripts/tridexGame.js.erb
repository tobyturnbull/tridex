var game = new Phaser.Game(1257, 684, Phaser.AUTO, '', { preload: preload, create: create, update: update });

function preload(){
  game.load.image('sky', '<%= image_path "sky.png" %>');
  game.load.spritesheet('player', '<%= image_path "player.png" %>', 43, 39);
  game.load.image('bullet', '<%= image_path "bullet.png" %>', 25, 11);
  game.load.spritesheet('boss', '<%= image_path "joel.png" %>', 93, 75);
  game.load.spritesheet('enemy', '<%= image_path "joelEnemy.png" %>', 146, 112)
}

var background;
var player;
var bullets;
var cursors;
var fire;
var enemies;
var boss;
var nextShotAt;
var shotDelay;
var score = 0;
var scoreText;
var playerHit;
var playerLives = 3;
var bossHealth = 5;
var bossExists = false;
// var enemy;


function create(){
  bullets = game.add.group();
  enemies = game.add.group();

  nextShotAt = 0;
  shotDelay = 300;

  game.physics.startSystem(Phaser.Physics.ARCADE);

  game.world.setBounds(0, 0, game.canvas.width, game.canvas.height);

  player = game.add.sprite(50, 50, 'player');
  boss = game.add.sprite(200, 200, 'boss')

  cursors = game.input.keyboard.createCursorKeys();

  game.physics.arcade.enable(player);
  game.physics.arcade.enable(bullets);
  game.physics.arcade.enable(boss);
  // game.physics.arcade.enable(enemy);
  // bullets.outOfBoundsKill = true;

  game.camera.follow(player);

  player.body.collideWorldBounds = true;

  scoreText = game.add.text((game.canvas.width / 2), 50, 'score: 0', { fontSize: '32px', fill: 'white' });

  // game.background.fixedToCamera = true

  // game.camera.follow(player);


}

function update(){

  var playerHit = function(){
    playerLives = playerLives - 1;

  }

  var fire = function(){
    if (player._exists && shotDelay < game.time.now){
      var b = bullets.create(player.body.x, player.body.y, 'bullet');
      game.physics.arcade.enable(b);
      b.body.velocity.x = 450;
      shotDelay = game.time.now + 500;

    } else {
      return;
      //  console.log(bullets);

      //bullets.setAll('this.body.velocity.x', 300);
      // bullets.set(b, 'this.body.velocity.x', 300, true, true, 0, false);
      //bullets.body.velocity.x = 300;
    };
  };

  var enemyCreator = function(){
    var randomValue = game.rnd.integerInRange(0, game.canvas.height)
    if (game.time.now >= 20000 && player._exists && bossExists === false) {
      var joel = game.add.sprite(game.canvas.width, (game.canvas.height / 2), 'boss');
      game.physics.arcade.enable(joel);
      joel.body.velocity.x = -150;
      bossExists = true;
    }else if (game.time.now <= 20001){
      var e = enemies.create(game.canvas.width, randomValue, 'enemy');
      game.physics.arcade.enable(e);
      e.body.velocity.x = -150;
      game.physics.arcade.overlap(e, bullets, bulletHitEnemy, null, this);
    };
  };

  game.physics.arcade.overlap(boss, bullets, bulletHitBoss, null, this);
  game.physics.arcade.overlap(player, boss, touchBoss, null, this);
  game.physics.arcade.overlap(enemies, bullets, bulletHitEnemy, null, this);

  player.body.velocity.x = 0;
  player.body.velocity.y = 0;

  if (cursors.up.isDown && cursors.left.isDown)
  {
    player.body.velocity.y = -300;
    player.body.velocity.x = -300;
    player.frame = 1;
  }
  else if (cursors.up.isDown && cursors.right.isDown)
  {
    player.body.velocity.y = -300;
    player.body.velocity.x = 300;
    player.frame = 7;
  }
  else if (cursors.down.isDown && cursors.left.isDown)
  {
    player.body.velocity.y = 300;
    player.body.velocity.x = -300;
    player.frame = 2;
  }
  else if (cursors.down.isDown && cursors.right.isDown)
  {
    player.body.velocity.y = 300;
    player.body.velocity.x = 300;
    player.frame = 8;
  }
  else if (cursors.left.isDown)
  {
    player.body.velocity.x = -300;

      // player.animations.play('left');
    player.frame = 0;
  }
  else if (cursors.right.isDown)
  {
    player.body.velocity.x = 300;
    player.frame = 6;
  }
  else if (cursors.up.isDown)
  {
    player.body.velocity.y = -200
    player.frame = 4;
    player.body.velocity.x = -50;
  }
  else if (cursors.down.isDown)
  {
    player.body.velocity.y = 200
    player.frame = 5;
    player.body.velocity.x = -50;
  }
  else
  {
    player.animations.stop();
    player.frame = 3;
    player.body.velocity.x = -50;

  }

  if (game.input.keyboard.isDown(Phaser.Keyboard.Z)) {
      fire();
  }

  if (game.input.keyboard.isDown(Phaser.Keyboard.X)) {
      enemyCreator();
  }

};

// console.log("Test")

function bulletHitBoss (boss, bullet) {
  if (bossHealth > 0) {
    if (boss.frame === 0){
      boss.frame = 1;
    } else {
      boss.frame = 0;
    };
  bossHealth = bossHealth - 1;
  bullet.kill();
    } else {
      boss.frame = 2;
      bullet.kill();
  };
}

function touchBoss (player, boss) {
  if (playerLives === 1){
  player.kill();
  } else {
    playerLives = playerLives - 1;
  }

}

function bulletHitEnemy (enemies, bullet) {
  console.log('hit', enemies.frame);
  bullet.kill();
  if (enemies.frame === 0){
    enemies.frame = 1;
    return;
  } else if (enemies.frame === 1) {
  enemies.kill();
  score += 500;
  scoreText.text = 'Score: ' + score;
  return;
  }

};